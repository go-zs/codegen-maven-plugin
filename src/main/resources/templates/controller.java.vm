/*
 * create by mybatis-plus-generator
 */
package ${package.Controller};

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.web.bind.annotation.*;
import org.springframework.security.access.prepost.PreAuthorize;
import javax.annotation.Resource;
import ${package.Entity}.${table.entityName};
import ${package.Service}.${table.serviceName};
import io.github.gogozs.model.ResponseResult;

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

#set($service=$table.serviceName.substring(0,1).toLowerCase() + ${table.serviceName.substring(1)})
#set($entity=$table.entityName.substring(0,1).toLowerCase() + ${table.entityName.substring(1)})


#set($len=${table.entityName.length()} - 2)
#set($model=$entity)
#if($entity.endsWith("PO"))
    #set($model=${entity.substring(0, $len)})
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("/api/v1/${model}")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Resource
    private $!{table.serviceName} ${service};

    /**
    * 分页查询
    *
    * @param pageNumber   分页页码
    * @param pageSize     每页数量
    * @param searchCount  是否count总数
    * @return 查询结果
    */
    @GetMapping
    @PreAuthorize("@accessDecisionService.hasPermission('${model}:query')")
    public ResponseResult<Page<$!{table.entityName}>> queryByPage(
            @RequestParam(value = "pageNumber", required = false, defaultValue = "1") long pageNumber,
            @RequestParam(value = "pageSize", required = false, defaultValue = "10") long pageSize,
            @RequestParam(value = "searchCount", required = false, defaultValue = "false") boolean searchCount) {
        Page<$!{table.entityName}> page = new Page<>(pageNumber, pageSize, searchCount);
        return ResponseResult.success(this.$!{service}.page(page));
    }

    /**
    * 通过主键查询单条数据
    *
    * @param id 主键
    * @return 单条数据
    */
    @GetMapping("{id}")
    @PreAuthorize("@accessDecisionService.hasPermission('${model}:query')")
    public ResponseResult<$!{table.entityName}> queryById(@PathVariable("id") long id) {
        return ResponseResult.success(this.$!{service}.getById(id));
    }

    /**
     * 新增数据
     *
     * @param $!{entity} 实体
     * @return 新增结果
     */
    @PostMapping
    @PreAuthorize("@accessDecisionService.hasPermission('${model}:create')")
    public ResponseResult<Boolean> add(@RequestBody $!{table.entityName} $!{entity}) {
        return ResponseResult.success(this.$!{service}.save($!{entity}));
    }

    /**
     * 编辑数据
     *
     * @param $!{entity} 实体
     * @return 编辑结果
     */
    @PutMapping
    @PreAuthorize("@accessDecisionService.hasPermission('${model}:update')")
    public ResponseResult<Boolean> edit(@RequestBody $!{table.entityName} $!{entity}) {
        return ResponseResult.success(this.$!{service}.updateById($!{entity}));
    }

    /**
    * 删除数据
    *
    * @param id 主键
    * @return 删除是否成功
    */
    @DeleteMapping
    @PreAuthorize("@accessDecisionService.hasPermission('${model}:delete')")
    public ResponseResult<Boolean> deleteById(String id){
        return ResponseResult.success(this.$!{service}.removeById(id));
    }

}

